<launch>
    <arg name="map" value="my_map"/>
    <arg name="robot_name" value="/robot_1"/>
    <master auto="start"/>
    <param name="/use_sim_time" value="true"/>

    <!--Load parameters for localization node  -->
    <rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
    <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />
    <!---rosparam command="load" file="$(find roborts_bringup)/config/robot_1.yaml" /-->

    <node name="master_discovery" pkg="master_discovery_fkie" type="master_discovery">
      <param name="mcast_group" value="224.0.0.251" />
    </node>

    <node name="master_sync" pkg="master_sync_fkie" type="master_sync">
      <!-- Since version 0.7.4:
        For all sync_* and ignore_* parameter you can use follow structure to define filter for specific hosts:
        <rosparam param="sync_topics">
            - hostname:
              - filter
        </rosparam>
      -->

      <!-- The list of topics, which are to be ignored while a synchroniation. The ~ignore_nodes list is processed first.
      These are defaults and cannot be removed: ['/rosout', '/rosout_agg'] -->
      <rosparam param="sync_topics">
      [/robot_1/amcl_pose , /robot_2/amcl_pose ]
      </rosparam>
      <rosparam param="ignore_services">[/*]</rosparam>
    </node>

    <group ns ="$(arg robot_name)">
    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" />

    <!-- Run the stage simulator -->
    <node pkg="stage_ros" type="stageros" name="stageros" args="$(find roborts_bringup)/worlds/$(arg map).world" respawn="false" >
      <remap from="base_scan" to="scan" />
      <param name="base_watchdog_timeout" value="0.01" />
    </node>




    <!-- Run the localization node -->
    <!-- node pkg="roborts_localization" type="uwb_node" name="uwb_node" respawn="false" output="screen"/ -->
    <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" />

    <!-- Run the global planner Node -->
    <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" />

    <!-- Run the local planner node -->
    <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" output="screen">
      
      <param name="robot_prefix" type ="string" value="$(arg robot_name)"/>
      
    </node>
    
    <!-- Run the velocity converter node -->
    <node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false">
      
      <param name="robot_prefix" type ="string" value="$(arg robot_name)"/>
      
    </node>

    <!-- Run the rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find roborts_bringup)/rviz/roborts.rviz" />

    <!--Run the behavior tree-->
    <node pkg="roborts_decision" type="behavior_test_node" name="behavior_test_node" respawn="false" output="screen" >
      
      <param name="robot_prefix" type ="string" value="$(arg robot_name)"/>

    </node>

    </group>
</launch>
